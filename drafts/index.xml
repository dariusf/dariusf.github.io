<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on Darius Foo</title><link>https://dariusf.github.io/drafts/</link><description>Recent content in Drafts on Darius Foo</description><generator>Hugo</generator><language>en-US</language><copyright>Copyright Â© 2022, Darius Foo.</copyright><lastBuildDate>Fri, 30 Dec 2022 10:41:06 +0800</lastBuildDate><atom:link href="https://dariusf.github.io/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title>Satisfying Music Theory</title><link>https://dariusf.github.io/drafts/satisfying-music-theory/</link><pubDate>Fri, 30 Dec 2022 10:41:06 +0800</pubDate><guid>https://dariusf.github.io/drafts/satisfying-music-theory/</guid><description>&lt;script src="https://dariusf.github.io/abcjs-basic-min.js">&lt;/script>
&lt;link rel="stylesheet" type="text/css" href="https://dariusf.github.io/abcjs-audio.css">
&lt;script src="https://dariusf.github.io/abcjs.js">&lt;/script>


&lt;!-- TLDR -->
&lt;p>This post is about my experiments in generating music using SMT.&lt;/p>
&lt;p>As a teaser, here is a procedurally-generated harmonization of the first line of &lt;!-- the English Christmas carol -->
&lt;em>Joy to the World&lt;/em>.
Given the melody (in the soprano voice), the system produces the other three voices in a way that makes harmonic sense.&lt;/p>

&lt;span id="joy">
X: 1
T: Joy to the World
L: 1/16
K: C
M: 4/4
Q: 1/4=110
V: sop name="S"
V: alto name="A"
V: tenor name="T" clef=treble-8
V: bass name="B" clef=bass middle=d transpose=-24
%
V: sop
c4 B3 A1 G6 F2 E4 D4 C6 G2 A6 A2 B6 B2 c6
V: alto
e4 d4 G6 d2 G6 G6 c6 F4 A2 e2 e1 e4 B1 c6
V: tenor
A4 D4 G6 A2 E1 E3 D4 E4 E6 A6 G4 G1 G3 A6
V: bass
"vi" A4 "V" G3 "ii" F1 "I" G6 "ii" A1 "iii" d1 "V" G6 "I" G6 "I" c6 "vi" d6 "ii" G2 "iii" B3 "iii" G3 "vi" A6
&lt;/span>
&lt;script>renderMusicIn('joy')&lt;/script>


&lt;p>More examples &lt;a href="#examples">here&lt;/a>. The rest of the post describes the journey (or at least the first part of it, since it appears to be far from over!).&lt;/p></description></item><item><title>SATB Bird</title><link>https://dariusf.github.io/drafts/bird/</link><pubDate>Thu, 24 Oct 2019 23:49:57 +0800</pubDate><guid>https://dariusf.github.io/drafts/bird/</guid><description>&lt;p>Flappy Bird and choral singing have a lot in common.
Bird analogies, gestures, calls, and &lt;a href="https://www.youtube.com/watch?v=4gCI3ySNNDU">songs&lt;/a> are common in warmups, and in both activities, you are trying to steer a small flapping thing along a fine line through (your) pipes, backed by a lush (musical) landscape.&lt;/p>
&lt;p>To make that less of a reach, I cobbled together a &lt;a href="https://github.com/dariusf/satb-bird">prototype&lt;/a> of a singing-powered Flappy Bird, based on an open source &lt;a href="https://github.com/xviniette/FlappyLearning">clone&lt;/a> of the game.
It would have been called &lt;em>Flappy Lips&lt;/em>, but I settled on &lt;em>SATB Bird&lt;/em> to tease the upcoming multiplayer edition.&lt;/p></description></item></channel></rss>